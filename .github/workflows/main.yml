name: Main

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
#    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
        
        # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

        # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'gradle'
          
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
        
      - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

#      - name: Write key
#        run: |
#          echo buildWithGitSuffix=true >> local.properties
#          echo storePassword=password >> local.properties
#          echo keyAlias=alias >> local.properties
#          echo keyPassword=password >> local.properties
#          echo fileDir=`pwd`/key.jks >> local.properties
#          keytool -genkey -dname "cn=A, ou=D, o=G, l=P, st=M, c=I" -keystore key.jks -storepass password -alias alias -keyalg RSA -keysize 4096 -validity 10000
          
#      - name: Cache gradle
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-

#      - name: Gradle prebuild
#        run: |
#          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
#          ./gradlew prebuild
          
#      # Run Tests Build
#      - name: Run gradle tests
#        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew clean build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble
        
      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

